---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
    service: api
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
        service: api
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
      volumes:
        - name: yarn
          emptyDir:
            medium: Memory
        - name: tmp
          emptyDir:
            medium: Memory
        - name: cache
          emptyDir:
            medium: Memory
      containers:
        - name: api
          image: ghcr.io/realliance/community-api:main@sha256:13b481bfccf51a189eef4bcb05367046e79e9211d030cf5373d123c5971b2b0f
          ports:
            - containerPort: 3000
              protocol: TCP
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 101
            runAsGroup: 101
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 3
          volumeMounts:
            - mountPath: /.yarn
              name: yarn
            - mountPath: /tmp
              name: tmp
            - mountPath: /.cache
              name: cache
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - "./migrate.sh"
          env:
            - name: DB
              value: postgres
            - name: DATABASE_NAME
              value: postgres
            - name: DATABASE_HOST
              value: psql
            - name: DATABASE_USER
              value: postgres
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres.acid-community.credentials.postgresql.acid.zalan.do
                  key: password
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    service: api
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: api
